package ChatRoom;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Label;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

import org.omg.CosNaming.NamingContextExtPackage.AddressHelper;

public class Client extends JFrame implements ActionListener {
	private static final long serialVersionUID = 1L;
	static String userName ="";
	static boolean readyToSend = false;
	private boolean connected;
	private Label label;
	
	static JTextField tf;
	static JTextField tfServer, tfPort;
	static JButton login, logout, sendMessage;
	static JTextArea ta;
	
	public Client() {
		JPanel northPanel = new JPanel(new GridLayout(3, 1));
		JPanel serverAndPort = new JPanel(new GridLayout(1, 5, 1, 3));
		tfServer = new JTextField("127.0.0.1");
		tfPort = new JTextField("2007");
		tfPort.setHorizontalAlignment(SwingConstants.RIGHT);
		serverAndPort.add(new JLabel("Server address: "));
		serverAndPort.add(tfServer);
		serverAndPort.add(new JLabel("Port number: "));
		serverAndPort.add(tfPort);
		serverAndPort.add(new JLabel(""));
		northPanel.add(serverAndPort);
		
		label = new Label("Nhập tên và bấm login để vào phòng chat!", SwingConstants.CENTER);
		northPanel.add(label);
		tf = new JTextField("Guest");
		tf.setBackground(Color.WHITE);
		northPanel.add(tf);
		add(northPanel, BorderLayout.NORTH);
		
		ta = new JTextArea("Welcome to chatroom!", 80, 80);
		JPanel centerPanel = new JPanel(new GridLayout(1, 1));
		centerPanel.add(new JScrollPane(ta));
		ta.setEditable(false);
		add(centerPanel, BorderLayout.CENTER);
		
		login = new JButton("Login");
		login.addActionListener(this);
		logout = new JButton("Logout");
		logout.addActionListener(this);
		logout.setEnabled(false);
		sendMessage = new JButton("Send");
		sendMessage.addActionListener(this);
		sendMessage.setEnabled(false);
		
		JPanel southPanel = new JPanel();
		southPanel.add(login);
		southPanel.add(logout);
		southPanel.add(sendMessage);
		add(southPanel, BorderLayout.SOUTH);
		
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setSize(600, 600);
		setLocationRelativeTo(null);
		setVisible(true);
		tf.requestFocus();
	}
	
	static boolean ready = false;
	
	@Override
	public void actionPerformed(ActionEvent arg0) {
		
	}
	
	public static void main(String[] args) {
		new Client();
	}
}
